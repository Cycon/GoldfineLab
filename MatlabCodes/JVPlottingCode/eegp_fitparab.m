function [invmtx,vreg,neighbors,tpcoords,tpcoords2,optsused]=eegp_fitparab(chan,nnear,if_gen,opts)
% [invmtx,vreg,neighbors,tpcoords,plane_coords,optsused]=eegp_fitparab(chan,nnear,if_genopts) finds the
% regression matrix to determine the best-fitting parabola or general quadratic at chan and 
% its nnear nearest neighbors
%
% this can be used in making Laplacians.
% the negative of the fourth column of invmtx is the linear combination of chan and the nnear
% electrodes that can estimate the Laplacian.
%
% if the in-plane coords of the nearest channels are columns x(i),y(i), 
% and chan is at (0,0), then (for if_gen=0)
% (invmtx*V)(i) =[a,b,c,d] where a+b*x(i)+c*y(i)+d*(x(i)^2+y(i)^2) is the least-squares best
% fit to a parabola that has value of equal to the difference between a given 0 at chan,
% and values V at the neighboring channels
%  if if_gen=1
% (invmtx*V)(i) =[a,b,c,d,e,f] where a+b*x(i)+c*y(i)+d*x(i)^2+e*x(i)y(i)+f*y(i)^2 is the least-squares best
% fit to a general quadratic that has value of equal to the difference between a given 0 at chan,
% and values V at the neighboring channels
%
% note that the number of neighbors actually used may exceed nnear if there are ties
%
% chan is the channel name as a text string
% nnear is the number of nearest neighbors
%   OR, if nnear is a cell array, it is a list of the channels to use
% e.g., eegp_fitparab('FC5',cellstr(strvcat('FC3','T3','F3','F7')),[])
%
% if_gen controls the kind of fit
% opts: options structure, e.g., generated by eegp_defopts
%
% invmtx: a matrix of size [nnear 4] (if_gen=0) or [nnear 6] (if_gen=1); 
% vreg: the regressors
% neighbors: the nearest neighbors
% tpcoords: coordinates (3d) in the tangent plane, with chan in first position, followed by neighbors
% tpcoords2: coords (2d) in the tangent plane
% optsused: options used
%
%
%  See also:  EEGP_DEFOPTS, EEGP_NEIGHBORS,EEGP_ISINTERIOR, EEGP_TPCOORDS, EEGP_FITPARAB_UTIL.
%
if (nargin<=2) opts=[]; end
opts=eegp_defopts(opts);
optsused=opts;
%
if (isnumeric(nnear))
    neighbors=eegp_neighbors(chan,nnear);
else
    neighbors=[];
    neighbors.labels=nnear;
    neighbors.dists=eegp_dists(chan,char(nnear),opts);
    for k=1:length(nnear)
        neighbors.coords(k,:)=getfield(opts.EEGP_LEADS,neighbors.labels{k,1});
    end
    neighbors.start_ties=NaN; %no start ties since the neighbors were specified
end
%
tpcoords=eegp_tpcoords(chan,strvcat(chan,char(neighbors.labels))); %tangent plane coords of all
tpcoords=tpcoords-repmat(tpcoords(1,:),size(tpcoords,1),1); %put chan at the origin
[u,s,v]=svd(tpcoords,0);
tpcoords2=u(:,[1:2])*s(1:2,1:2);
[invmtx,vreg]=eegp_fitparab_util(tpcoords2,if_gen);
return
